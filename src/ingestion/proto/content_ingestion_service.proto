syntax = "proto3";

package e8;

message ContentProfile {
  message Tag {
    // An unstructured string.
    string text = 1;

    // In unix timestamp.
    int64 timestamp_secs = 2;
  }

  // It assumes a unique content ID was assigned by the outside system.
  int64 content_id = 1;

  // An unstructured string.
  string title = 2;

  // Zero of more genres referred to using structured strings.
  repeated string genres = 3;

  // Stores a map of <tag ID, relevance> pairs. The relevance scores sum to 1.
  // Note, the tag ID key has nothing to do with the list of Tags in the field
  // below.
  map<int64, float> genome_scores = 4;

  // Zero or more user defined tags. See the Tag message for what it is.
  repeated Tag tags = 5;

  // Optionally provides the content’s corresponding ID at IMDB.
  int64 imdb_id = 6;

  // Optionally provides the content’s corresponding ID at TMDB.
  int64 tmdb_id = 7;
}

message WriteContentProfilesRequest {
  repeated ContentProfile content_profiles = 1;
}

message WriteContentProfilesResponse {}

service ContentIngestionService {
  // It creates/updates a list metadata entries for the specified contents,
  // keyed by the content IDs. It overwrites the profile if there is an existing
  // entry.
  rpc CreateContentProfiles(WriteContentProfilesRequest)
      returns (WriteContentProfilesResponse);
}
